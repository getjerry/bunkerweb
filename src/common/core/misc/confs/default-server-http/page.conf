{% if IS_LOADING != "yes" and DISABLE_DEFAULT_SERVER == "no" +%}
location / {
	etag off;
	add_header Last-Modified "";
	server_tokens off;
	default_type 'text/html';
	root /usr/share/bunkerweb/core/misc/files;
	content_by_lua_block {
			local utils = require "bunkerweb.utils"
			local rand = utils.rand
			local subsystem = ngx.config.subsystem

			local template
			local render = nil
			if subsystem == "http" then
				template = require "resty.template"
				render = template.render
			end

			local nonce_style = rand(16)

			-- Override CSP header
			ngx.header["Content-Security-Policy"] = "default-src 'none'; frame-ancestors 'none'; form-action 'self'; img-src 'self' data:; style-src 'self' 'nonce-"
				.. nonce_style
				.. "'; font-src 'self' data:; base-uri 'self'; require-trusted-types-for 'script'; block-all-mixed-content; upgrade-insecure-requests;"

			-- Remove server header
			ngx.header["Server"] = nil

			-- Override HSTS header
			if ngx.var.scheme == "https" then
				ngx.header["Strict-Transport-Security"] = "max-age=31536000; includeSubDomains; preload"
			end

			-- Override X-Content-Type-Options header
			ngx.header["X-Content-Type-Options"] = "nosniff"

			-- Override Referrer-Policy header
			ngx.header["Referrer-Policy"] = "no-referrer"

			-- Render template
			render("default.html", {
				nonce_style = nonce_style,
			})
	}
}
{% endif %}
